---
# Main tasks file

# noop to detect check mode for older versions of ansible.
# http://docs.ansible.com/ansible/playbooks_checkmode.html#information-about-check-mode-in-variables
- command: /bin/true
  register: noop_result

- set_fact: check_mode={{ noop_result|skipped }}

# These are the version of Ubuntu for which this role has been tested.
- name: Fail if not a new release of Ubuntu
  fail: msg="{{ ansible_distribution_version }} is not an acceptable version of Ubuntu for this role"
  when: "ansible_distribution_version not in ['12.04', '13.04', '13.10', '14.04', '16.04']"

- name: check that docker_version is set
  fail: msg="Required variable \"docker_version\" is not defined."
  when: docker_version is not defined

# Newer versions of Docker no longer require apparmor, but it seems like a good thing to have.
- name: Install apparmor
  apt: pkg=apparmor state=present

# Newer documentation suggests installing a few other (non kernel) packages
# https://github.com/docker/docker.github.io/blob/9093e0a/engine/installation/linux/ubuntu.md#recommended-extra-packages
# https://github.com/docker/docker.github.io/blob/9093e0a/engine/installation/linux/ubuntu.md#set-up-the-repository
- name: Install a few recommended packages
  apt: pkg="{{ item }}" state=present
  with_items:
    - curl
    - apt-transport-https
    - ca-certificates

- name: Write /etc/default/docker config file
  template: src=etc_default_docker.j2 dest=/etc/default/docker
  register: r_etc_default_docker

- name: Install LXC Docker
  include: lxc-docker.yml
  when: docker_version == '1.5.0'

- name: Install Docker Engine
  include: docker-engine.yml
  when: docker_version != '1.5.0'

# if we changed the config, but didn't reinstall docker, then restart it
- name: Restart docker on config change
  service: name=docker state=restarted
  when: r_etc_default_docker|changed and not r_docker_package_install|changed and not check_mode

- name: Ensure that Docker is running
  service: name="docker" state=started
  when: not check_mode

- name: Wait until docker daemon is available
  command: docker info
  register: r_docker_info
  # need a special case here, or this always fails in check mode.
  until: r_docker_info|skipped or r_docker_info.rc == 0
  retries: "{{ docker_daemon_startup_retries }}"
  delay: 1

- name: Check if /etc/default/ufw exists
  stat: path=/etc/default/ufw
  register: ufw_default_exists

- name: Change ufw default forward policy from drop to accept
  lineinfile:
    dest: /etc/default/ufw
    regexp: "^DEFAULT_FORWARD_POLICY="
    line: "DEFAULT_FORWARD_POLICY=\"ACCEPT\""
  when: ufw_default_exists.stat.exists

# this role modifies the host in ways which might have been cached
# let's update all facts here to be sure we have ansible up to date.
- name: update facts about host
  setup:
